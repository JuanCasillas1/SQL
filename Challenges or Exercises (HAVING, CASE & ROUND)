////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
HAVING Execercises

CREATE TABLE employees (
    employee_id INTEGER PRIMARY KEY,
    department TEXT,
    salary DECIMAL(10, 2),
    years_of_experience INTEGER
);

INSERT INTO employees (employee_id, department, salary, years_of_experience)
VALUES
    (1, 'Finance', 60000.00, 5),
    (2, 'Marketing', 55000.00, 3),
    (3, 'Sales', 75000.00, 8),
    (4, 'Engineering', 80000.00, 7),
    (5, 'HR', 50000.00, 2),
    (6, 'Finance', 70000.00, 6),
    (7, 'Marketing', 60000.00, 4),
    (8, 'Sales', 85000.00, 10),
    (9, 'Engineering', 90000.00, 9),
    (10, 'HR', 55000.00, 3),
    (11, 'Sales', 72000.00, 6),
    (12, 'Sales', 80000.00, 7),
    (13, 'Engineering', 85000.00, 8),
    (14, 'Engineering', 92000.00, 10);

#1
--Calculate how much is spent per year on the salaries for each department where the total spent on the salaries is at least $300,000. 
--Your results table should include the department name and the total spent on salaries in that department.

SELECT department, SUM(salary) as total_spent
FROM employees
GROUP BY department
HAVING total_spent >= 300000;

#2
--Select all the departments that pay an average of at least $70,000 per year. 
--Your results table should include the department and average salary for that department, and you should rename the average salary column using an alias

SELECT department, AVG(salary) as avg_salary
FROM employees
GROUP BY department
HAVING avg_salary>=70000;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
CASE & ROUND Exercises

CREATE TABLE marathon (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
   participant_name TEXT,
   previous_experience TEXT,
   completion_fraction REAL);

INSERT INTO marathon (participant_name, previous_experience,  completion_fraction)
    VALUES ("Sadie Hawkins", "yes", 1);
INSERT INTO marathon (participant_name, previous_experience,  completion_fraction)
    VALUES ("Brandon Flowers", "no", 0.241);
INSERT INTO marathon (participant_name, previous_experience,  completion_fraction)
    VALUES ("Michael Scott", "no", 0.804);
INSERT INTO marathon (participant_name, previous_experience,  completion_fraction)
    VALUES ("Karamo Brown", "yes", 0.9512);
INSERT INTO marathon (participant_name, previous_experience,  completion_fraction)
    VALUES ("Antoni Porowski", "yes", 0.640);
INSERT INTO marathon (participant_name, previous_experience,  completion_fraction)
    VALUES ("Rajnighanda Kapoor", "no", 1);

#1

--Select every participant name and the percent of the marathon that they completed. Show the percent of the marathon completed rounded to one decimal place.

SELECT participant_name,
ROUND(completion_fraction*100,1) AS completion_percent
FROM marathon;

#2
--For this query, show how many employees completed each quarter of the marathon (75% or more, 50%, 25%, or under 25%).
--You can output the quarter_completed by using CASE with the completion_fraction column.
--You can output '75%+' for completing >= .75,
--'50%+' for completing >= .50,
--'25%+' for completing >= .25,
--and 'Under 25%' otherwise.
--Use COUNT and GROUP BY to show the number of employees within each of those quarters.

SELECT COUNT(participant_name) AS "Number of participants",
CASE WHEN completion_fraction >=.75 THEN "75%+"
WHEN completion_fraction >=.5 THEN "50%+"
WHEN completion_fraction >=.25 THEN "25%+"
ELSE "Under 25%" END AS "quarter_completed"
FROM marathon
GROUP BY quarter_completed
